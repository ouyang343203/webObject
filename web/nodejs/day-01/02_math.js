// 一、逻辑算数运算符
//1运算符 +，-，*，/，%，--，++
var m1 = 7 
var m2 = 3 
console.log("m1+m2:",m1+m2)
console.log("m1-m2:",m1-m2)
console.log("m1*m2:",m1*m2)
console.log("m1/m2:",m1/m2)
console.log("m1%m2:",m1%m2)
var m3 = m2++ //说明先将m2的值赋予给m3
var m4 = ++m1 //将m1+1的值赋予给M4
console.log("m2:",m2)
console.log("m3:",m3)
console.log("m1:",m1)
console.log("m4:",m4)

//2特殊运算符
var m5 = "5" //会将字符串隐式转换成number类型5在执行++
m5++
console.log("m5:",m5)

var m6 = "6a" //会将字符串隐式转换成number类型5在执行++
m6++
console.log("m6:",m6)

var m7 = 15+-"3" //等价于  15 + （-"3"）
console.log("m7:",m7)
//var m7 = 15++"3" //报错不能这样写 需要改成 15+ +"3"中间添加一个空格

//3比较运算符 > ,<, >=,<=,==(说明：只要求两者的值相同久可以), !==,  ===（说明：值相同，类型也要相同）,!===（全等于类型也需要匹配
//说明 NaN和任何值比较 都是false
//(3.1)
var a = 3
var b = 3
var c = 1
var d = true
var e = "23" 
var f = "5a" 
var g = "23" 

console.log(a==b)
console.log(b===c)
console.log(c==d)//true 隐式转换为1 结果为true
console.log(c===d)//true 隐式转换为1 结果为false
console.log(null==undefined)// 两个值都是空值使用“==” 结果为true
console.log(null===undefined)// 两个值都是空值使用“===” 结果为false
console.log(e > c)
console.log(d > f)

//(3.2) 数字和数字字符串比较回将数字字符串转化为Number在比较
console.log("a>e",a > e)

//(3.3)先比较字一个字符 在表第二个字符
var h1 = "3" 
var h2 = "23" 
console.log("h1>h2",h1 > h2)

//(3.4) 先比较第一个数字在比较第二个数字
console.log("e>g",e > g)

//(3.5)比较第一个字符编码 在比较第二个字符编码
var e1 = "6a" //在进行比较时字符串会转位数字
var f1 = "5a" //在进行比较时字符串会转位数字
console.log("e1 > f1:",e1 > f1)

//(3.6)比较第一个字符编码 在比较第二个字符编码
var e2 = 6 //在进行比较时字符串会转位数字
var f2 = "5a" //
console.log("e2 > f2:",e2 > f2) //f2转化成了NaN
console.log("NaN > NaN:",NaN == NaN) //NaN 和任意的比较都是false 

//(3.7) 字符串和字符串之间的比较 通过编码值班在比较第一个如果相同在比较第二个在比较第三个第四个。。。
var e3 = "在那里" //在进行比较时字符串会转位数字
var f3 = "进口" //在进行比较时字符串会转位数字
console.log("e2 > f2:",e3 > f3)


// 二、逻辑运算符 && 、|| 、！ 、短路逻辑：即当执行完第一个表达式成立即为true，不在执行第二个表达式
//短路逻辑举例：
var n = 5;
n > 2 || console.log(0) //这个就是短路逻辑第一个成立console.log(0)不会在执行
n < 7 && console.log(0) // 这个

//三、位运算符：
/*//3.1 按位与:&，转成二进制上下两位比较，都是1结果是1，否则是0 写法中间用&符号如：3&5
3&5 的计算 3的二进制是011 5的二进制是101
011
101
---
001 //转成10进制以后就是1
*/


/*//3.2 按位或:|，转成二进制上下两位比较 含有1结果是1，否则是0 写法中间用&符号如：3|5
3|5 的计算 3的二进制是011 5的二进制是101
011
101
---
111 //结果转成10进制以后就是7
*/


/*//3.3 按位异或:^，转成二进制上下两位比较 不同的结果是1，否则是0 写法中间用&符号如：3^5
3^5 的计算 3的二进制是011 5的二进制是101
011
101
---
110 //结果转成10进制以后就是6
*/


//3.4 按位右移:>>，转成二进制后右移就是后面砍掉 如果移动两位砍掉2位；规律没每移动一位在原来的基础上除以2，如果是小数在取整
//如14 向右边移动两位
//14 转成二进制就是1110 向右边移动两位就是11 结果转成十进制就是 3
// console.log("14 向右边移动两位" + 14>>2)

/*//3.4 按位左移:<<，转成二进制后面补几位0；如果移动1未就补1个0, 规律没每移动一位在原来的基础上乘以2
console.log(" 向右边移动两位", + 2<<2)
*/

//四、赋值运算 = ，+= ，-= ，*= /=
var g = 1
var g = g++ //类似 g = g + 1  也可以写成 g+=1

//例如要求商品打9折出售
var price = 1000
price*=0.9 
console.log(price)

//五、三目元算符：根据条件的选择对应的表达式


