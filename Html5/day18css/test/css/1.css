@charset "UTF-8";
/* 
使用步骤说明：
1．在day22code下创建项目文件夹test
2．在test文件夹中创建预处理文件夹scss，用于存放我们编写的．scss文件
3．在test文件夹中创建css文件夹，用于右放生成的．css文件
4．在scss文件夹下创建1．scss文件，写一可代码 body｛background-color：＃f00； ｝
5．打开test目录对应的cmd窗口

6．在test目录下的cmd窗口输入命令sass scss／1．scss：css／1．css后回车执行sass命令 scss／1．scss源文件：表示生成 css／1．css编译后生成的目标文件
7．查看css文件夹下是否有内容生成，且内容包含1．scss文件中的css代码
注意：执行命令后在css文件夹下生成的文件可能有多个，没有关系，只要有1．css且有内容就可以了

监听整个文件夹进行编译
sass -w scss:css
-w 表示watch监听的含义，也就是说，只要scss 文件夹有变动，就立即编译到css文件夹中，这样就实现了半自动化
那这样我们修改scss文件的内容就可以同步生成到css文件中
注意：如果当时没有编译成功，按一下Ctrl＋C
按两次Ctrl＋C就是退出监听，重新执行上面的命令才能再次监听



3 sass 规则
1．注释规则
因为大家安装的版本不一样，所以有的同学写中文注释可能会报错或者乱码
/**/
/* CSS的注释方式，sass中是可以使用的，并且可以编译到CSS文件中 */
/*# sourceMappingURL=1.css.map */
/* 

4．嵌套规则
要按照HTML结构的嵌套关系，在scss文件中使用｛｝嵌套着来写选择器
这样编译的时候就会按照嵌套的结果编译对应的CSS
好处：结构非常清晰，不用写很多选择器，还不用计算权重值的问题

易错点：
1．编译路径是否是scss与css文件的上层文件夹test
2．出现的路径中不要出现中文
3．编译的过程受电脑性能的影响，有的电脑编译的比较快，有的慢，这个很正常
4．如果两次测试不行，建议把cmd窗口关闭，重新再监听一次

 */
/* 
3 sass的基本语法
1．变量的使用
为什么要用变量？有什么作用？
比如企业需要设置主题色，比如京东红，改版时需要将企业色更换，这时只需要改一个颜色的变量值就可以改掉全局的颜色，无需大量更改了

2全局变量与局部变量
全局变量是直接写在scss文件中的，而局部变量是写在某个选择器｛｝中的
注意：变量在哪里声明，就在哪里使用，局部变量不可以被其它的外部选择器使用

3变量的加载和读取顺序
必须要先定义变量，才能使用变量，否则会编译报错：
Undefined Variable 未定义的变量

3．计算功能【了解】
注意：虽然sass提供了变量计算的功能，但是由于系统IO调用顺序，导致有的电脑可以快速计算并编译，有的报错或者直接不编译
所以我们尽量不要使用sass来进行变量的计算，如需计算，推荐使用JS
*/
.box {
  border: 1x solid #000; }
  .box ul {
    list-style: none; }
    .box ul li {
      height: 30px; }
      .box ul li a {
        text-decoration: none; }

/*# sourceMappingURL=1.css.map */
